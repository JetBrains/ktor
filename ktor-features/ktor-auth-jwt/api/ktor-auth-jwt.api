public final class io/ktor/auth/jwt/JWTAuthKt {
	public static final fun jwt (Lio/ktor/auth/Authentication$Configuration;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun jwt$default (Lio/ktor/auth/Authentication$Configuration;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class io/ktor/auth/jwt/JWTAuthenticationProvider : io/ktor/auth/AuthenticationProvider {
}

public final class io/ktor/auth/jwt/JWTAuthenticationProvider$Configuration : io/ktor/auth/AuthenticationProvider$Configuration {
	public final fun authHeader (Lkotlin/jvm/functions/Function1;)V
	public final fun authSchemes (Ljava/lang/String;[Ljava/lang/String;)V
	public static synthetic fun authSchemes$default (Lio/ktor/auth/jwt/JWTAuthenticationProvider$Configuration;Ljava/lang/String;[Ljava/lang/String;ILjava/lang/Object;)V
	public final fun challenge (Lkotlin/jvm/functions/Function4;)V
	public final fun getRealm ()Ljava/lang/String;
	public final fun setRealm (Ljava/lang/String;)V
	public final fun validate (Lkotlin/jvm/functions/Function3;)V
	public final fun verifier (Lcom/auth0/jwk/JwkProvider;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun verifier (Lcom/auth0/jwk/JwkProvider;Lkotlin/jvm/functions/Function1;)V
	public final fun verifier (Lcom/auth0/jwt/interfaces/JWTVerifier;)V
	public final fun verifier (Ljava/lang/String;Ljava/lang/String;Lcom/auth0/jwt/algorithms/Algorithm;Lkotlin/jvm/functions/Function1;)V
	public final fun verifier (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun verifier (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun verifier$default (Lio/ktor/auth/jwt/JWTAuthenticationProvider$Configuration;Lcom/auth0/jwk/JwkProvider;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun verifier$default (Lio/ktor/auth/jwt/JWTAuthenticationProvider$Configuration;Lcom/auth0/jwk/JwkProvider;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun verifier$default (Lio/ktor/auth/jwt/JWTAuthenticationProvider$Configuration;Ljava/lang/String;Ljava/lang/String;Lcom/auth0/jwt/algorithms/Algorithm;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun verifier$default (Lio/ktor/auth/jwt/JWTAuthenticationProvider$Configuration;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class io/ktor/auth/jwt/JWTCredential : io/ktor/auth/Credential, io/ktor/auth/jwt/JWTPayloadHolder {
	public fun <init> (Lcom/auth0/jwt/interfaces/Payload;)V
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getAudience ()Ljava/util/List;
	public fun getClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun getExpiresAt ()Ljava/util/Date;
	public fun getIssuedAt ()Ljava/util/Date;
	public fun getIssuer ()Ljava/lang/String;
	public fun getJwtId ()Ljava/lang/String;
	public fun getListClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
	public fun getNotBefore ()Ljava/util/Date;
	public fun getPayload ()Lcom/auth0/jwt/interfaces/Payload;
	public fun getSubject ()Ljava/lang/String;
}

public abstract interface class io/ktor/auth/jwt/JWTPayloadHolder {
	public abstract fun get (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getAudience ()Ljava/util/List;
	public abstract fun getClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public abstract fun getExpiresAt ()Ljava/util/Date;
	public abstract fun getIssuedAt ()Ljava/util/Date;
	public abstract fun getIssuer ()Ljava/lang/String;
	public abstract fun getJwtId ()Ljava/lang/String;
	public abstract fun getListClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
	public abstract fun getNotBefore ()Ljava/util/Date;
	public abstract fun getPayload ()Lcom/auth0/jwt/interfaces/Payload;
	public abstract fun getSubject ()Ljava/lang/String;
}

public final class io/ktor/auth/jwt/JWTPayloadHolder$DefaultImpls {
	public static fun get (Lio/ktor/auth/jwt/JWTPayloadHolder;Ljava/lang/String;)Ljava/lang/String;
	public static fun getAudience (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/util/List;
	public static fun getClaim (Lio/ktor/auth/jwt/JWTPayloadHolder;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public static fun getExpiresAt (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/util/Date;
	public static fun getIssuedAt (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/util/Date;
	public static fun getIssuer (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/lang/String;
	public static fun getJwtId (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/lang/String;
	public static fun getListClaim (Lio/ktor/auth/jwt/JWTPayloadHolder;Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
	public static fun getNotBefore (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/util/Date;
	public static fun getSubject (Lio/ktor/auth/jwt/JWTPayloadHolder;)Ljava/lang/String;
}

public final class io/ktor/auth/jwt/JWTPrincipal : io/ktor/auth/Principal, io/ktor/auth/jwt/JWTPayloadHolder {
	public fun <init> (Lcom/auth0/jwt/interfaces/Payload;)V
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	public fun getAudience ()Ljava/util/List;
	public fun getClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun getExpiresAt ()Ljava/util/Date;
	public fun getIssuedAt ()Ljava/util/Date;
	public fun getIssuer ()Ljava/lang/String;
	public fun getJwtId ()Ljava/lang/String;
	public fun getListClaim (Ljava/lang/String;Lkotlin/reflect/KClass;)Ljava/util/List;
	public fun getNotBefore ()Ljava/util/Date;
	public fun getPayload ()Lcom/auth0/jwt/interfaces/Payload;
	public fun getSubject ()Ljava/lang/String;
}

