public abstract class io/ktor/serialization/kotlinx/AbstractKotlinxSerializationConverter : io/ktor/serialization/ContentConverter {
	public fun <init> (Lkotlinx/serialization/SerialFormat;)V
	public fun serialize (Lio/ktor/http/ContentType;Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun serializeNullable (Lio/ktor/http/ContentType;Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected final fun serializerFromTypeInfo (Lio/ktor/util/reflect/TypeInfo;)Lkotlinx/serialization/KSerializer;
}

public abstract class io/ktor/serialization/kotlinx/KotlinxSerializationBase {
	public fun <init> (Lkotlinx/serialization/SerialFormat;)V
	public final fun serialize (Lio/ktor/serialization/kotlinx/SerializationParameters;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun serializeContent (Lio/ktor/serialization/kotlinx/SerializationParameters;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/serialization/kotlinx/KotlinxSerializationConverter : io/ktor/serialization/kotlinx/AbstractKotlinxSerializationConverter {
	public fun <init> (Lkotlinx/serialization/SerialFormat;)V
	public fun deserialize (Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Lio/ktor/utils/io/ByteReadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun serializeNullable (Lio/ktor/http/ContentType;Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/serialization/kotlinx/KotlinxSerializationConverterKt {
	public static final fun serialization (Lio/ktor/serialization/Configuration;Lio/ktor/http/ContentType;Lkotlinx/serialization/BinaryFormat;)V
	public static final fun serialization (Lio/ktor/serialization/Configuration;Lio/ktor/http/ContentType;Lkotlinx/serialization/StringFormat;)V
}

public final class io/ktor/serialization/kotlinx/KotlinxWebsocketSerializationConverter : io/ktor/serialization/WebsocketContentConverter {
	public fun <init> (Lkotlinx/serialization/SerialFormat;)V
	public fun deserialize (Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Lio/ktor/websocket/Frame;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun isApplicable (Lio/ktor/websocket/Frame;)Z
	public fun serialize (Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun serializeNullable (Ljava/nio/charset/Charset;Lio/ktor/util/reflect/TypeInfo;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/serialization/kotlinx/SerializationParameters {
	public field serializer Lkotlinx/serialization/KSerializer;
	public fun <init> (Lkotlinx/serialization/SerialFormat;Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Ljava/nio/charset/Charset;)V
	public fun getCharset ()Ljava/nio/charset/Charset;
	public fun getFormat ()Lkotlinx/serialization/SerialFormat;
	public final fun getSerializer ()Lkotlinx/serialization/KSerializer;
	public fun getTypeInfo ()Lio/ktor/util/reflect/TypeInfo;
	public fun getValue ()Ljava/lang/Object;
	public final fun setSerializer (Lkotlinx/serialization/KSerializer;)V
}

